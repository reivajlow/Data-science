auto_mpg <- read.delim("C:/Users/javoe/Downloads/auto_mpg.txt")
View(auto_mpg)
cars
cars_mpg
---
title: "taller"
author: "javier saavedra"
date: "9/9/2022"
output: pdf_document
---
auto_mpg$displacement
auto_mpg$displacement[auto_mpg$displacement=200]
auto_mpg[auto_mpg$displacement=200]
auto_mpg[auto_mpg$displacement==200]
auto_mpg[auto_mpg$displacement ==350]
auto_mpg[auto_mpg$displacement=350]
auto_mpg[auto_mpg$displacement==350]
auto_mpg[auto_mpg$displacement==350,]
auto_mpg[auto_mpg$displacement==151,]
auto_mpg$horsepower[auto_mpg$displacement==151,]
auto_mpg$horsepower[auto_mpg$displacement==151]
as.numeric(auto_mpg$horsepower[auto_mpg$displacement==151])
mean(as.numeric(auto_mpg$horsepower[auto_mpg$displacement==151]))
mean(as.numeric(drop.na(auto_mpg$horsepower[auto_mpg$displacement==151])))
mean(as.numeric(drop_na(auto_mpg$horsepower[auto_mpg$displacement==151])))
library(tidyr)
mean(as.numeric(drop_na(auto_mpg$horsepower[auto_mpg$displacement==151])))
mean(drop_na(as.numeric(auto_mpg$horsepower[auto_mpg$displacement==151])))
auto_mpg$horsepower[auto_mpg$displacement==151]
as.numeric(auto_mpg$horsepower[auto_mpg$displacement==151])
drop_na(as.numeric(auto_mpg$horsepower[auto_mpg$displacement==151]))
library(tidyverse)
strsplit("renault lecar deluxe",split = " ")
strsplit("renault lecar deluxe",split = " ",perl = 2)
strsplit("renault lecar deluxe",split = " ",perl = 1)
strsplit("renault lecar deluxe",split = " ",perl = 1)[1]
strsplit("renault lecar deluxe",split = " ",perl = 1)[[1]][1]
strsplit(auto_mpg$car_name,split = " ",perl = 1)[[1]][1]
strsplit(auto_mpg$car_name,split = " ",perl = 1)
strsplit(auto_mpg$car_name,split = " ",perl = 1)[1]
strsplit(auto_mpg$car_name,split = " ",perl = 1)[[1]]
strsplit(auto_mpg$car_name,split = " ",perl = 1)
strsplit(auto_mpg$car_name,split = " ",perl = 1)[[1:398]][1]
strsplit(auto_mpg$car_name,split = " ",perl = 1)[[c(1:398)]]
strsplit(auto_mpg$car_name,split = " ",perl = 1)[[c(1:398)]]
strsplit(auto_mpg$car_name,split = " ",perl = 1)[[]][1]
strsplit(auto_mpg$car_name,split = " ",perl = 1)[[33]][1]
strsplit(auto_mpg$car_name,split = " ",perl = 1)[[c(1:2)]][1]
strsplit(auto_mpg$car_name,split = " ",perl = 1)[[c(1)]][1]
strsplit(auto_mpg$car_name,split = " ",perl = 1)[[c(1)]][c(1:3)]
strsplit(auto_mpg$car_name,split = " ",perl = 1)[[c(1:5)]][c(1)]
library(tidyr)
library(tidyverse)
auto_mpg$horsepower[auto_mpg$]
strsplit(auto_mpg$car_name,split = " ",perl = 1) ->marcas
View(marcas)
marcas[1]
marcas[1][1]
marcas[1][1][1]
marcas[[1]]
marcas[[1]][1]
marcas[[2]][1]
marcas[[3]][1]
marcas[[4:5]][1]
marcas[[c(3:7)]][1]
marcas[[]][1]
unlist(marcas)
marcas[[]][1,2]
marcas
library(stringr)
str_split(auto_mpg$car_name,split = " ",n = 2) ->marcas
str_split(auto_mpg$car_name,split = " ",n = 2)
str_split(auto_mpg$car_name,pattern = " ",n = 2) ->marcas
View(marcas)
data.frame(marcas)
as.data.frame(marcas)
as.data.frame(marcas)
marcas
str_split_fixed(auto_mpg$car_name,pattern = " ",n = 2) ->marcas
as.data.frame(marcas)
View(marcas)
marcas$V1
marcas[1,]
marcas[,1]
marcas[,1]
auto_mpg$marca <- marcas[,1]
table(auto_mpg$marca)
table(auto_mpg$marca,auto_mpg$origin)
attach(auto_mpg)
as.factor(origin)
levels(origin)
labels(origin)
factor(origin,levels = c("usa","europe","japan"))
factor(origin,labels = c("usa","europe","japan"))
factor(origin,labels = c("usa","europe","japan"))-> auto_mpg$origin
table(origin,mpg)
plot(origin,mpg)
box.plot(origin,mpg)
boxplot(origin,mpg)
boxplot(origin,mpg)
boxplot.matrix(origin,mpg)
boxplot.matrix(origin,mpg,3)
boxplot(origin,mpg)
library(tidyverse)
library(hrbrthemes)
library(viridis)
auto_mpg %>%
ggplot( aes(x=origin, y=mpg, fill=origin)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
auto_mpg %>%
ggplot( aes(x=origin, y=mpg, fill=origin)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
ggtitle("A boxplot with jitter") +
xlab("")
auto_mpg %>%
ggplot( aes(x=origin, y=mpg, fill=origin)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
ggtitle("A boxplot with jitter") +
xlab("")
auto_mpg %>%
ggplot( aes(x=origin, y=mpg, fill=origin)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
ggtitle("A boxplot mpg per origin") +
xlab("")
auto_mpg2 <- auto_mpg[!((auto_mpg$origin=1)>36)]
View(auto_mpg2)
auto_mpg2 <- auto_mpg[!((auto_mpg$origin=1)>35)]
auto_mpg2 <- auto_mpg[!((auto_mpg$origin=1)>30)]
auto_mpg2 <- auto_mpg[!((auto_mpg$origin=1)>20)]
auto_mpg$origin=1
(auto_mpg$origin=1)
auto_mpg[auto_mpg$origin=1,]
auto_mpg2 <- auto_mpg[auto_mpg$origin=1]
auto_mpg2 <- auto_mpg[auto_mpg$origin="usa"]
auto_mpg[auto_mpg$origin="usa"]
auto_mpg2 <- auto_mpg[auto_mpg$origin=="usa"]
auto_mpg[auto_mpg$origin=="usa"]
auto_mpg2 <- auto_mpg[auto_mpg$origin=="usa",]
auto_mpg2 <- auto_mpg[auto_mpg$origin==1,]
auto_mpg <- read.delim("C:/Users/javoe/Downloads/auto_mpg.txt")
View(auto_mpg)
str_split_fixed(auto_mpg$car_name,pattern = " ",n = 2) ->marcas
marcas
auto_mpg$marca <- marcas[,1]
table(auto_mpg$marca,auto_mpg$origin)
attach(auto_mpg)
as.factor(origin)
factor(origin,labels = c("usa","europe","japan"))-> auto_mpg$origin
auto_mpg %>%
ggplot( aes(x=origin, y=mpg, fill=origin)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
ggtitle("A boxplot mpg per origin") +
xlab("")
auto_mpg[auto_mpg$origin==1,]
auto_mpg2 <- auto_mpg[auto_mpg$origin==1,]
View(auto_mpg2)
auto_mpg2 <- auto_mpg[auto_mpg$origin==1]
auto_mpg2 <- auto_mpg[auto_mpg$origin==1,]
auto_mpg2 <- auto_mpg[auto_mpg$origin=="usa",]
auto_mpgusa <- auto_mpg[auto_mpg$origin=="usa",]
auto_mpgeurope <- auto_mpg[auto_mpg$origin=="europe",]
auto_mpgjapan <- auto_mpg[auto_mpg$origin=="japan",]
plot(auto_mpg)
library(GGally)
ggpairs(auto_mpg,columns = 2:4, ggplot2::aes(colour=origin))
ggpairs(auto_mpg, ggplot2::aes(colour=origin))
ggpairs(auto_mpg,aes(colour=origin))
ggpairs(auto_mpg)
drop_na(as.numeric(auto_mpg$horsepower[auto_mpg$displacement=="?"]))
auto_mpg[-9,]
auto_mpg[-4,]
auto_mpg[!4,]
auto_mpg[c(1:3,5:9),]
auto_mpg[,c(1:3,5:9)]
ggpairs(auto_mpg[,c(1:3,5:9)])
ggpairs(auto_mpg[,c(1:3,5:8)])
x = 158400000
2/10 *x
2/10 *x + x * 5/32
1/10 *x + x * 1/32
hijo <- 1/10 *x + x * 1/32
conyuge <- 2/10 *x + x * 5/32
conyuge + 3 * hijo = x*3/4
conyuge + 3 * hijo == x*3/4
hugo <- x * 3/44
paco <- (x/4 - hugo)/8
luis <- x/4 - hugo - paco
hugo
paco
luis
hugo + paco + luis == x/4
1900*100/4600
1500*100/2700
4500*100/1900
4500*100/1900 - 100
1500*100/2700-100
2500*100/5400
1100*100/2900-100
4100*100/2500 - 100
4100*100/2500 - 100
15400*4100+12500*1100
15400*4500+12500*1500
x = 126000000
conyuge <- 2/10 *x + x * 4/28
conyuge <- 2/10 *x + x/4 * 4/7
hijo <- 1/10 *x + x/4 * 1/7
conyuge + 3 * hijo == x*3/4
hugo <- x * 3/40
paco <- (x/4 - hugo)/7
luis <- x/4 - hugo - paco
hugo + paco + luis == x/4
library(readr)
accelerometer <- read_csv("Base_2_Accelerometer/accelerometer.csv",
col_types = cols(wconfid = col_factor(levels = c("1","2", "3")),
x = col_number(), y = col_number(),
z = col_number()))
attach(accelerometer)
na.omit(accelerometer)
#reconocer factores y valores
accelerometer$wconfid<- factor(wconfid,labels =  c("rojo","azul","verde"))
rojo  <- accelerometer[wconfid==1,]
azul  <- accelerometer[wconfid==2,]
verde <- accelerometer[wconfid==3,]
#preparar base de datos para animacion
animaterojo <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(rojo$x,rojo$y,rojo$z),revoluciones=c(rojo$pctid,rojo$pctid,rojo$pctid))
# Plot
myplot <- animaterojo %>%
ggplot( aes(x=revoluciones, y=value, group=eje, color=eje)) +
geom_line() +
geom_point() +
ylim(-3,3)+
scale_color_viridis(discrete = TRUE) +
ggtitle("vibraciones en aspa roja") +
theme_ipsum() +
ylab("aceleracion")+
transition_reveal(pctid)
library(ggplot2)
library(gganimate)
library(babynames)
library(hrbrthemes)
library(viridis)
library(gifski)
library(dplyr)
#preparar base de datos para animacion
animaterojo <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(rojo$x,rojo$y,rojo$z),revoluciones=c(rojo$pctid,rojo$pctid,rojo$pctid))
# Plot
myplot <- animaterojo %>%
ggplot( aes(x=revoluciones, y=value, group=eje, color=eje)) +
geom_line() +
geom_point() +
ylim(-3,3)+
scale_color_viridis(discrete = TRUE) +
ggtitle("vibraciones en aspa roja") +
theme_ipsum() +
ylab("aceleracion")+
transition_reveal(pctid)
animate(myplot, duration = 5, fps = 20, width = 400, height = 400, renderer = gifski_renderer())
anim_save("rojo.gif")
knitr::opts_chunk$set(echo = TRUE)
animaterojo <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(rojo$x,rojo$y,rojo$z),
revoluciones=c(rojo$pctid,rojo$pctid,rojo$pctid))
ggplot(data=animaterojo, aes(x=value, group=eje, fill=eje)) +
geom_density(adjust=1.5) +
theme_ipsum() +
facet_wrap(~eje) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
axis.ticks.x=element_blank()
)
ggplot(data=animaterojo, aes(x=value, group=eje, fill=eje)) +
geom_histogram( alpha=0.6, position = 'identity') +
theme_ipsum() +
facet_wrap(~eje) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
axis.ticks.x=element_blank()
)
ggplot(data=animaterojo, aes(x=value, group=eje, fill=eje)) +
geom_line( alpha=0.6) +
theme_ipsum() +
facet_wrap(~eje) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
axis.ticks.x=element_blank()
)
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, fill=eje)) +
geom_line( alpha=0.6) +
theme_ipsum() +
facet_wrap(~eje) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
axis.ticks.x=element_blank()
)
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_line( alpha=0.6) +
theme_ipsum()
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_line( alpha=0.6,lwd=2) +
theme_ipsum()
library(ggplot2)
animaterojo %>%
ggplot( aes(x=revoluciones, y=value, fill=eje)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Basic boxplot") +
xlab("")
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_line( alpha=0.5,lwd=2) +
theme_ipsum()
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.5) +
theme_ipsum()
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.5) +
facet_wrap(~eje) +
theme_ipsum()
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso rojo")
library(ggplot2)
hist(azul$x)
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso rojo")+
theme_ipsum()
animateazul <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(azul$x,azul$y,azul$z),
revoluciones=c(azul$pctid,azul$pctid,azul$pctid))
animateverde <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(verde$x,verde$y,verde$z),
revoluciones=c(verde$pctid,verde$pctid,verde$pctid))
var(rojo$x) -> varx
var(rojo$y) -> vary
var(rojo$z) -> varz
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso rojo")+
theme_ipsum()+
annotate("var=",x=20,y=5)
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso rojo")+
theme_ipsum()+
annotate("text",x=20,y=5,label="hola")
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso rojo")+
theme_ipsum()+
annotate("text",x=20,y=5,label=var(value))
value
install.packages("vtable")
library(vtable)
vt(rojo)
rojo[,3:5]
sumtable(rojo[,3:5],
summ=c('notNA(x)',
'mean(x)',
'median(x)',
'propNA(x)'))
st(accelerometer[,c(1,3,4,5)], group = 'wconfid', group.long = TRUE)
st(accelerometer[,c(1,3,4,5)], group = 'wconfid', group.test = TRUE)
st(accelerometer[,c(1,3,4,5)], group = 'wconfid', group.long = TRUE)
st(accelerometer[,c(1,3,4,5)], group = 'wconfid', group.long = TRUE,
summ = c('notNA(x)','mean(x)','sd(x^2)'))
st(accelerometer[,c(1,3,4,5)], group = 'wconfid', group.long = TRUE,
summ = c('notNA(x)','mean(x)','sd(x^2)'),'min(x)',"max(x")
st(accelerometer[,c(1,3,4,5)], group = 'wconfid', group.long = TRUE,
summ = c('notNA(x)','mean(x)','sd(x^2)','min(x)',"max(x)"))
cov(rojo[,3:5])
cov(rojo[,3:5])[1,1]
covrojo  <- cov(rojo [,3:5])
covazul  <- cov(azul [,3:5])
covverde <- cov(verde[,3:5])
covazul
covverde
st(accelerometer[,c(1,3,4,5)], group = 'wconfid', group.long = TRUE,
summ = c('notNA(x)','mean(x)','var(x)','min(x)',"max(x)"))
animaterojo <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(rojo$x,rojo$y,rojo$z),
revoluciones=c(rojo$pctid,rojo$pctid,rojo$pctid))
animateazul <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(azul$x,azul$y,azul$z),
revoluciones=c(azul$pctid,azul$pctid,azul$pctid))
animaterojo <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(rojo$x,rojo$y,rojo$z),
revoluciones=c(rojo$pctid,rojo$pctid,rojo$pctid))
animateazul <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(azul$x,azul$y,azul$z),
revoluciones=c(azul$pctid,azul$pctid,azul$pctid))
animateverde <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(verde$x,verde$y,verde$z),
revoluciones=c(verde$pctid,verde$pctid,verde$pctid))
library(ggplot2)
library(vtable)
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso rojo")+
theme_ipsum()
ggplot(data=animateazul, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso azul")+
theme_ipsum()
ggplot(data=animateverde, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso verde")+
theme_ipsum()
library(hrbrthemes)
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso rojo")
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso rojo")+
theme_classic()
print("matriz de covarianza caso rojo")
covrojo
print("matriz de covarianza caso rojo")
covrojo
print("matriz de covarianza caso azul")
covazul
print("matriz de covarianza caso verde")
covverde
myplot <- animaterojo %>%
ggplot( aes(x=revoluciones, y=value, group=eje, color=eje)) +
geom_line() +
geom_point() +
ylim(-3,3)+
scale_color_viridis(discrete = TRUE) +
ggtitle("vibraciones en aspa roja") +
theme_ipsum() +
ylab("aceleracion")+
transition_reveal(pctid)
animate(myplot, duration = 5, fps = 20, width = 400, height = 400,
renderer = gifski_renderer())
library(ggplot2)
animaterojo <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(rojo$x,rojo$y,rojo$z),
revoluciones=c(rojo$pctid,rojo$pctid,rojo$pctid))
animateazul <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(azul$x,azul$y,azul$z),
revoluciones=c(azul$pctid,azul$pctid,azul$pctid))
animateverde <- data.frame(eje=c(rep("x",51000),rep("y",51000),rep("z",51000)),
value=c(verde$x,verde$y,verde$z),
revoluciones=c(verde$pctid,verde$pctid,verde$pctid))
ggplot(data=animaterojo, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso rojo")
ggplot(data=animateazul, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso azul")
ggplot(data=animateverde, aes(x=revoluciones,y=value, group=eje, color=eje)) +
geom_point( alpha=0.4) +
facet_wrap(~eje) +
ggtitle("Dispersion de datos por eje para caso verde")
